{"version":3,"file":"static/css/main.a665c962.css","mappings":"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","sources":["globals.scss","components/Header/Header.module.scss","components/MainInformation/MainInformation.module.scss","breakpoints.scss","components/Stack/Stack.module.scss","components/Projects/ProjectsCard.module.scss","components/Projects/Projects.module.scss","components/Contact/Contact.module.scss","components/About/Educations.module.scss"],"sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700&display=swap');\n@import './breakpoints.scss';\n\nhtml,\nbody {\n\tpadding: 0;\n\tmargin: 0;\n\tfont-family: 'Outfit', sans-serif;\n\tmax-width: 1024px;\n\tmargin: 0 auto;\n\tpadding: 0 5px;\n\tcolor: #6f6e6e;\n\tbackground-color: #e6e7e8;\n}\n\na {\n\tcolor: inherit;\n\ttext-decoration: none;\n}\n\nul {\n\tpadding: 0;\n\tmargin: 0;\n}\n\nli {\n\tlist-style: none;\n}\n\nsection {\n\tmargin-top: 150px;\n}\n\nimg {\n\tdisplay: block;\n\tmax-width: 100%;\n\theight: auto;\n}\n\n* {\n\tbox-sizing: border-box;\n}\n\n:root {\n\t--primary-color: #fff;\n}\n\n.container {\n\twidth: 100%;\n}\n\n.sectionTitle {\n\tmargin-bottom: 55px;\n\n\t// h1 {\n\t// \tfont-weight: 700;\n\t// \tfont-size: 48px;\n\t// \tcolor: #42446e;\n\t// }\n\n\t// p {\n\t// \tfont-weight: 400;\n\t// \tfont-size: 28px;\n\t// }\n}\n\ninput {\n\tbackground-color: #f1f6fb;\n\tcolor: rgb(135 142 153);\n\theight: 60px;\n\tpadding-left: 24px;\n\twidth: 100%;\n\tfont-size: 15px;\n\tborder-radius: 10px;\n\tborder: none;\n\toutline: none;\n\n\t&:focus {\n\t\toutline-style: solid;\n\t\toutline-width: 1px;\n\t\toutline-color: #bbc9dd;\n\t}\n}\n\ntextarea {\n\tbackground-color: #f1f6fb;\n\tresize: none;\n\twidth: 100%;\n\theight: 200px;\n\tpadding-left: 24px;\n\tfont-size: 15px;\n\tborder-radius: 10px;\n\tborder: none;\n\toutline: none;\n\n\t&:focus {\n\t\toutline-style: solid;\n\t\toutline-width: 1px;\n\t\toutline-color: #bbc9dd;\n\t}\n}\n\n.titleInformation {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\ttext-align: center;\n\n\t@media (max-width: 767px) {\n\t\t& {\n\t\t\tmargin: 55px 0;\n\t\t}\n\t}\n}\n\n@media (min-width: 640px) {\n\t.container {\n\t\tmax-width: 640px;\n\t}\n}\n@media (min-width: 768px) {\n\t.container {\n\t\tmax-width: 768px;\n\t}\n}\n@media (min-width: 1024px) {\n\t.container {\n\t\tmax-width: 1024px;\n\t}\n}\n@media (min-width: 1280px) {\n\t.container {\n\t\tmax-width: 1280px;\n\t}\n}\n@media (min-width: 1536px) {\n\t.container {\n\t\tmax-width: 1536px;\n\t}\n}\n",".header {\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tmargin-top: 20px;\r\n\r\n\timg {\r\n\t\twidth: 50px;\r\n\t}\r\n\r\n\t.rightNav {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\r\n\t\tli {\r\n\t\t\tfont-weight: 500;\r\n\t\t\tfont-size: 20px;\r\n\t\t\tline-height: 26px;\r\n\t\t\tmargin: 0 20px;\r\n\t\t\tcursor: pointer;\r\n\t\t\ttransition: all 0.3s;\r\n\r\n\t\t\t&:first-child {\r\n\t\t\t\tmargin-left: 0;\r\n\t\t\t}\r\n\t\t\t&:last-child {\r\n\t\t\t\tmargin-right: 0;\r\n\t\t\t}\r\n\r\n\t\t\t&:hover {\r\n\t\t\t\tcolor: #000;\r\n\t\t\t}\r\n\r\n\t\t\t.icon {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tnav {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.background {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tz-index: 1;\r\n\t\twidth: 100%;\r\n\t\tbackground: #fff;\r\n\t}\r\n\tbutton {\r\n\t\toutline: none;\r\n\t\tborder: none;\r\n\t\t-webkit-user-select: none;\r\n\t\t-moz-user-select: none;\r\n\t\t-ms-user-select: none;\r\n\t\tcursor: pointer;\r\n\t\tposition: absolute;\r\n\t\ttop: 18px;\r\n\t\tright: 25px;\r\n\t\tz-index: 2;\r\n\t\twidth: 50px;\r\n\t\theight: 50px;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground: transparent;\r\n\t}\r\n\r\n\t.burger {\r\n\t\tpadding: 25px;\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tz-index: 2;\r\n\t\twidth: 230px;\r\n\r\n\t\tul,\r\n\t\tli {\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\r\n\t\tli {\r\n\t\t\tlist-style: none;\r\n\t\t\tmargin-bottom: 20px;\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: center;\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\r\n\t\t.iconPlaceholder {\r\n\t\t\twidth: 40px;\r\n\t\t\theight: 40px;\r\n\t\t\tborder-radius: 50%;\r\n\t\t\tflex: 40px 0;\r\n\t\t\tmargin-right: 20px;\r\n\t\t}\r\n\r\n\t\t.textPlaceholder {\r\n\t\t\tborder-radius: 5px;\r\n\t\t\twidth: 200px;\r\n\t\t\theight: 20px;\r\n\t\t\tflex: 1;\r\n\t\t}\r\n\r\n\t\t.refresh {\r\n\t\t\tpadding: 10px;\r\n\t\t\tposition: absolute;\r\n\t\t\tbackground: rgba(0, 0, 0, 0.4);\r\n\t\t\tborder-radius: 10px;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\ttop: 10px;\r\n\t\t\tright: 10px;\r\n\t\t\tz-index: 5;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\talign-items: center;\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\t}\r\n}\r\n","@import '../../breakpoints.scss';\r\n\r\n.mainInformation {\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\r\n\t@include media('<=tablet') {\r\n\t\tflex-wrap: wrap;\r\n\t\tjustify-content: center;\r\n\t\tmargin-top: 50px;\r\n\t}\r\n\r\n\t.information {\r\n\t\tmax-width: 500px;\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 55px;\r\n\t\ttext-align: center;\r\n\r\n\t\t@include media('<=tablet') {\r\n\t\t\tfont-size: 45px;\r\n\t\t}\r\n\r\n\t\t@include media('<=phone') {\r\n\t\t\tfont-size: 25px;\r\n\t\t}\r\n\t}\r\n\t.userIcon {\r\n\t\twidth: 350px;\r\n\t\theight: 350px;\r\n\t\tposition: relative;\r\n\r\n\t\t&:before {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\tinset: 0;\r\n\t\t\tborder: 10px solid transparent;\r\n\t\t\tborder-radius: 50%;\r\n\r\n\t\t\tbackground: linear-gradient(\r\n\t\t\t\t\tto bottom,\r\n\t\t\t\t\thsl(240deg 100% 51%) 0%,\r\n\t\t\t\t\thsl(298deg 100% 51%) 33%,\r\n\t\t\t\t\thsl(357deg 100% 50%) 67%,\r\n\t\t\t\t\thsl(55deg 100% 50%) 100%\r\n\t\t\t\t)\r\n\t\t\t\tborder-box;\r\n\r\n\t\t\t-webkit-mask: linear-gradient(#fff 0 0) content-box,\r\n\t\t\t\tlinear-gradient(#fff 0 0);\r\n\t\t\t-webkit-mask-composite: xor;\r\n\t\t\tmask-composite: exclude;\r\n\t\t}\r\n\r\n\t\timg {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tborder-radius: 50%;\r\n\t\t\tobject-fit: cover;\r\n\t\t\tobject-position: 0 0;\r\n\t\t}\r\n\r\n\t\t@include media('<=tablet') {\r\n\t\t\tmargin-top: 25px;\r\n\t\t}\r\n\r\n\t\t@include media('<=phone') {\r\n\t\t\twidth: 280px;\r\n\t\t\theight: 280px;\r\n\t\t}\r\n\t}\r\n}\r\n","$breakpoints: (\r\n  \"phone\": 360px,\r\n  \"tablet\": 768px,\r\n  \"desktop\": 1024px,\r\n  \"LGdesktop\": 1440px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"retina2x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 2)\",\r\n    \"(min-resolution: 192dpi)\"\r\n  ),\r\n  \"retina3x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 3)\",\r\n    \"(min-resolution: 350dpi)\"\r\n  )\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n  @for $i from 1 through length($conditions) {\r\n    $conditions: set-nth(\r\n      $conditions,\r\n      $i,\r\n      parse-expression(nth($conditions, $i))\r\n    );\r\n  }\r\n\r\n  $branches: get-query-branches($conditions);\r\n  $query: \"\";\r\n\r\n  @each $branch in $branches {\r\n    @if (str-length($query) != 0) {\r\n      $query: $query + \", \";\r\n    }\r\n\r\n    $query: $query + $branch;\r\n  }\r\n\r\n  @media #{$query} {\r\n    @content;\r\n  }\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n  $result: \"\";\r\n  $has-groups: false;\r\n\r\n  // Getting initial snapshot and looking for groups\r\n  @each $expression in $expressions {\r\n    @if (str-length($result) != 0) {\r\n      $result: $result + \" and \";\r\n    }\r\n\r\n    @if (type-of($expression) == \"string\") {\r\n      $result: $result + $expression;\r\n    } @else if (type-of($expression) == \"list\") {\r\n      $result: $result + nth($expression, 1);\r\n      $has-groups: true;\r\n    } @else {\r\n      @warn '#{$expression} is not a valid expression.';\r\n    }\r\n  }\r\n\r\n  // If we have groups, we have to create all possible combinations\r\n  @if $has-groups {\r\n    @each $expression in $expressions {\r\n      @if (type-of($expression) == \"list\") {\r\n        $first: nth($expression, 1);\r\n\r\n        @each $member in $expression {\r\n          @if ($member != $first) {\r\n            @each $partial in $result {\r\n              $result: join(\r\n                $result,\r\n                str-replace-first($first, $member, $partial)\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n  $operator: \"\";\r\n  $value: \"\";\r\n  $element: \"\";\r\n  $result: \"\";\r\n  $is-width: true;\r\n\r\n  @if (type-of($expression) != \"string\") {\r\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n  }\r\n\r\n  // Separating the operator from the rest of the expression\r\n  @if (str-slice($expression, 2, 2) == \"=\") {\r\n    $operator: str-slice($expression, 1, 2);\r\n    $value: str-slice($expression, 3);\r\n  } @else {\r\n    $operator: str-slice($expression, 1, 1);\r\n    $value: str-slice($expression, 2);\r\n  }\r\n\r\n  // Checking what type of expression we're dealing with\r\n  @if map-has-key($breakpoints, $value) {\r\n    $result: map-get($breakpoints, $value);\r\n  } @else if map-has-key($media-expressions, $expression) {\r\n    $result: map-get($media-expressions, $expression);\r\n    $is-width: false;\r\n  } @else {\r\n    $result: to-number($value);\r\n  }\r\n\r\n  @if ($is-width) {\r\n    $unit: unit($result);\r\n    $interval: 0;\r\n\r\n    @if (map-has-key($unit-intervals, $unit)) {\r\n      $interval: map-get($unit-intervals, $unit);\r\n    } @else {\r\n      @warn 'Unknown unit: #{$unit}';\r\n    }\r\n\r\n    @if ($operator == \">\") {\r\n      $element: \"(min-width: #{$result + $interval})\";\r\n    } @else if ($operator == \"<\") {\r\n      $element: \"(max-width: #{$result - $interval})\";\r\n    } @else if ($operator == \">=\") {\r\n      $element: \"(min-width: #{$result})\";\r\n    } @else if ($operator == \"<=\") {\r\n      $element: \"(max-width: #{$result})\";\r\n    } @else {\r\n      @warn '#{$expression} is missing an operator.';\r\n    }\r\n  } @else {\r\n    $element: $result;\r\n  }\r\n\r\n  @return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n  $search-start: str-index($subject, $search);\r\n\r\n  @if $search-start == null {\r\n    @return $subject;\r\n  }\r\n\r\n  $result: str-slice($subject, 0, $search-start - 1);\r\n  $result: $result + $replace;\r\n  $result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    } @else if $character == \".\" {\r\n      $divider: 1;\r\n    } @else {\r\n      @if type-of($index) != \"number\" {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _length($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      } @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\r\n    \"vh\" \"vmin\" \"vmax\";\r\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\r\n  $index: index($strings, $unit);\r\n\r\n  @if type-of($index) != \"number\" {\r\n    @warn 'Unknown unit `#{$unit}`.';\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}",".stack {\r\n\ttext-align: center;\r\n\r\n\th1 {\r\n\t\tposition: relative;\r\n\r\n\t\t&::before {\r\n\t\t\tposition: absolute;\r\n\t\t\tdisplay: none;\r\n\t\t\tcontent: url('../../assets/outline-text/stack.svg');\r\n\t\t\topacity: 0.4;\r\n\t\t\ttop: -40px;\r\n\t\t\tleft: -100px;\r\n\t\t}\r\n\t}\r\n\r\n\t.icons {\r\n\t\twidth: 100%;\r\n\t\tmargin: 70px auto 0;\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(auto-fill, minmax(100px, 135px));\r\n\t\trow-gap: 40px;\r\n\t\tcolumn-gap: 30px;\r\n\t\tjustify-content: center;\r\n\r\n\t\tsvg {\r\n\t\t\tmargin: 0 auto;\r\n\t\t}\r\n\t}\r\n\t\r\n\t@media (min-width: 1024px) {\r\n\t\th1:before {\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n}\r\n",".card {\r\n\theight: 200px;\r\n\tmin-width: 270px;\r\n\tmax-width: 310px;\r\n\tbox-shadow: 2px 2px 100px rgba(0, 0, 0, 0.2);\r\n\tborder-radius: 20px;\r\n\tposition: relative;\r\n\ttransition: 0.5s;\r\n\toverflow: hidden;\r\n\tz-index: 2;\r\n\r\n\t&:hover {\r\n\t\theight: 500px;\r\n\t\tz-index: 3;\r\n\t\tbackground-color: #e1e2e3;\r\n\t}\r\n\r\n\t&:hover .links {\r\n\t\topacity: 1;\r\n\t}\r\n\r\n\t.image {\r\n\t\twidth: 310px;\r\n\t\theight: 150px;\r\n\t}\r\n\r\n\timg {\r\n\t\twidth: 100%;\r\n\t\theight: 150px;\r\n\t\tbackground-color: grey;\r\n\t\tborder-top-left-radius: 20px;\r\n\t\tborder-top-right-radius: 20px;\r\n\t}\r\n\tp {\r\n\t\theight: auto;\r\n\t}\r\n\r\n\t.information {\r\n\t\tposition: absolute;\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\talign-content: flex-start;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 10px;\r\n\t\ttransition: 0.5s;\r\n\t\tz-index: 100;\r\n\t\ttransform: translateY();\r\n\r\n\t\th2 {\r\n\t\t\tfont-weight: 500;\r\n\t\t\tfont-size: 28px;\r\n\t\t\tline-height: 26px;\r\n\t\t\tcolor: #000;\r\n\t\t\tmargin: 0;\r\n\t\t\tmargin-bottom: 15px;\r\n\t\t}\r\n\r\n\t\tp {\r\n\t\t\tfont-weight: 300;\r\n\t\t\tfont-size: 18px;\r\n\t\t\tline-height: 26px;\r\n\t\t\tmargin: 0;\r\n\t\t\tmargin-bottom: 15px;\r\n\t\t}\r\n\r\n\t\t.stack {\r\n\t\t\tfont-weight: 400;\r\n\t\t\tfont-size: 16px;\r\n\t\t\tcolor: #42446e;\r\n\t\t}\r\n\t}\r\n\r\n\t.links {\r\n\t\tposition: absolute;\r\n\t\tbottom: 15px;\r\n\t\twidth: 100%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\talign-items: center;\r\n\t\tflex-wrap: wrap;\r\n\t\topacity: 0;\r\n\t\ttransition: 1.5s;\r\n\r\n\t\ta {\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tcursor: pointer;\r\n\t\t\ttransition: all 0.3s;\r\n\r\n\t\t\t&:hover {\r\n\t\t\t\tcolor: #000;\r\n\t\t\t}\r\n\r\n\t\t\tp {\r\n\t\t\t\tmargin: 0 5px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",".projects {\r\n\ttext-align: center;\r\n\r\n\th1 {\r\n\t\tposition: relative;\r\n\r\n\t\t&::before {\r\n\t\t\tposition: absolute;\r\n\t\t\tdisplay: none;\r\n\t\t\tcontent: url('../../assets/outline-text/projects.svg');\r\n\t\t\topacity: 0.4;\r\n\t\t\ttop: -40px;\r\n\t\t\tleft: -190px;\r\n\t\t}\r\n\t}\r\n\r\n\t.cards {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(auto-fill, minmax(270px, 310px));\r\n\t\tgrid-template-rows: 200px minmax(100px, 250px);\r\n\t\trow-gap: 40px;\r\n\t\tcolumn-gap: 30px;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t@media (min-width: 1024px) {\r\n\t\th1:before {\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n}\r\n",".contact {\r\n\tmargin-bottom: 50px;\r\n\th1 {\r\n\t\tposition: relative;\r\n\r\n\t\t&::before {\r\n\t\t\tposition: absolute;\r\n\t\t\tdisplay: none;\r\n\t\t\tcontent: url('../../assets/outline-text/contact.svg');\r\n\t\t\topacity: 0.4;\r\n\t\t\ttop: -35px;\r\n\t\t\tleft: -190px;\r\n\t\t}\r\n\t}\r\n\r\n\t.subtitle {\r\n\t\tfont-size: 16px;\r\n\t\tline-height: 24px;\r\n\t\tcolor: rgb(135 142 153);\r\n\t\tmax-width: 520px;\r\n\t}\r\n\r\n\t@media (min-width: 1024px) {\r\n\t\th1:before {\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.form {\r\n\twidth: 100%;\r\n\r\n\t:not(.namePerson) {\r\n\t\tmargin-top: 2rem;\r\n\t}\r\n\r\n\t.textarea {\r\n\t\tbackground-color: #f1f6fb;\r\n\t\tresize: none;\r\n\t\twidth: 100%;\r\n\t\theight: 200px;\r\n\t\tpadding-left: 24px;\r\n\t\tfont-size: 15px;\r\n\t\tborder-radius: 10px;\r\n\t\tborder: none;\r\n\t\toutline: none;\r\n\t\talign-items: start;\r\n\r\n\t\t&:focus {\r\n\t\t\toutline-style: solid;\r\n\t\t\toutline-width: 1px;\r\n\t\t\toutline-color: #bbc9dd;\r\n\t\t}\r\n\t}\r\n\r\n\t.namePerson {\r\n\t\tdisplay: flex;\r\n\t\tgap: 32px;\r\n\r\n\t\tinput {\r\n\t\t\tposition: relative;\r\n\t\t}\r\n\r\n\t\tspan {\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: 0;\r\n\t\t\ttop: 20px;\r\n\t\t\tcolor: red;\r\n\t\t}\r\n\r\n\t\t@media (max-width: 768px) {\r\n\t\t\t& {\r\n\t\t\t\tflex-wrap: wrap;\r\n\t\t\t\tgap: 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.button {\r\n\t\tdisplay: block;\r\n\t\tmargin: 10px auto 0;\r\n\t\tpadding: 16px 28px;\r\n\t\tfont-weight: 500;\r\n\t\tcolor: #fff;\r\n\t\tbackground-color: #d4dade;\r\n\t\tborder-radius: 10px;\r\n\t\tborder: none;\r\n\t\ttransition-property: all;\r\n\t\ttransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n\t\ttransition-duration: 150ms;\r\n\r\n\t\t&:hover {\r\n\t\t\tbackground-color: #7eb3ff;\r\n\t\t}\r\n\t}\r\n}\r\n","h2 {\r\n\tfont-weight: 700;\r\n\tfont-size: 42px;\r\n\tline-height: 52px;\r\n}\r\n\r\np {\r\n\tfont-weight: 400;\r\n\tfont-size: 18px;\r\n\tline-height: 26px;\r\n}\r\n\r\n.cardBlock {\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\twidth: 700px;\r\n\theight: 90px;\r\n\tpadding-bottom: 15px;\r\n\tmargin-bottom: 20px;\r\n\tborder-bottom: 2px solid #c2a6fa;\r\n}\r\n\r\n.content {\r\n\twidth: 525px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\r\n\t.name {\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 20px;\r\n\t\tline-height: 28px;\r\n\t\tcolor: #666666;\r\n\t}\r\n\r\n\t.speciality {\r\n\t\tcolor: #a7a7a7;\r\n\t\tfont-weight: 500;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 28px;\r\n\t}\r\n}\r\n\r\n.date {\r\n\twidth: 175px;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: flex-end;\r\n\tjustify-content: space-between;\r\n\r\n\t.employment {\r\n\t\theight: 26px;\r\n\t\tpadding: 0 15px;\r\n\t\tfont-weight: 600;\r\n\t\tfont-size: 15px;\r\n\t\tline-height: 26px;\r\n\t\tborder-radius: 100px;\r\n\t\tcolor: #018c0f;\r\n\t\tbackground-color: #d7ffe0;\r\n\t}\r\n\r\n\t.timePeriod {\r\n\t\tfont-weight: 500;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 28px;\r\n\t}\r\n}\r\n"],"names":[],"sourceRoot":""}